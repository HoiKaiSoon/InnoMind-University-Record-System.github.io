{"remainingRequest":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\email\\send.vue?vue&type=style&index=0&id=92fed396&scoped=true&lang=css&","dependencies":[{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\email\\send.vue","mtime":1705127333091},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogLmVkaXRvcnsKICAgdGV4dC1hbGlnbjpsZWZ0OwogICBtYXJnaW46IDIwcHg7CiAgIHdpZHRoOiA3MzBweDsKIH0KOjp2LWRlZXAgLnctZS10ZXh0LWNvbnRhaW5lciB7CiAgIGhlaWdodDogMzYwcHggIWltcG9ydGFudDsKIH0K"},{"version":3,"sources":["send.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"send.vue","sourceRoot":"src/views/email","sourcesContent":["<template>\r\n    <div>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" style=\"margin-top: 6px;\" size=\"small\" label-width=\"100px\">\r\n        <el-form-item label=\"邮件标题\" prop=\"subject\">\r\n          <el-input v-model=\"form.subject\" style=\"width: 646px\" placeholder=\"请输入邮件标题，标题不能为空\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"收件地址\" prop=\"tos\">\r\n          <el-input v-model=\"form.tos\" style=\"width: 646px\" placeholder=\"请输入收件地址，多个地址英文逗号,隔开\" />\r\n        </el-form-item>\r\n        <div ref=\"editor\" class=\"editor\" />\r\n        <el-button :loading=\"loading\" style=\"margin-left:1.6%;margin-bottom: 30px\" size=\"medium\" type=\"primary\" @click=\"doSubmit\">发送邮件</el-button>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { send } from '@/api/email'\r\n  import { upload } from '@/utils/upload'\r\n  import { mapGetters } from 'vuex'\r\n  import E from 'wangeditor'\r\n  export default {\r\n    name: 'Index',\r\n    data() {\r\n      return {\r\n        loading: false, form: { subject: '', tos: '', content: '' },\r\n        rules: {\r\n          subject: [\r\n            { required: true, message: '标题不能为空', trigger: 'blur' }\r\n          ],\r\n          tos: [\r\n            { required: true, message: '收件人不能为空', trigger: 'blur' }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\r\n        'imagesUploadApi',\r\n        'baseApi'\r\n      ])\r\n    },\r\n    mounted() {\r\n      const _this = this\r\n      var editor = new E(this.$refs.editor)\r\n      // 自定义菜单配置\r\n      editor.config.zIndex = 10\r\n      // 文件上传\r\n      editor.config.customUploadImg = function(files, insert) {\r\n        // files 是 input 中选中的文件列表\r\n        // insert 是获取图片 url 后，插入到编辑器的方法\r\n        files.forEach(image => {\r\n          upload(_this.imagesUploadApi, image).then(res => {\r\n            const data = res.data\r\n            const url = _this.baseApi + '/file/' + data.type + '/' + data.realName\r\n            insert(url)\r\n          })\r\n        })\r\n      }\r\n      editor.config.onchange = (html) => {\r\n        this.form.content = html\r\n      }\r\n      editor.create()\r\n    },\r\n    methods: {\r\n      doSubmit() {\r\n        this.$refs['form'].validate((valid) => {\r\n          if (valid) {\r\n            this.loading = true\r\n            send(this.form).then(res => {\r\n              this.$notify({\r\n                title: '发送成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n              this.loading = false\r\n            }).catch(err => {\r\n              this.loading = false\r\n              console.log(err.response.data.message)\r\n            })\r\n          } else {\r\n            return false\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n    .editor{\r\n      text-align:left;\r\n      margin: 20px;\r\n      width: 730px;\r\n    }\r\n   ::v-deep .w-e-text-container {\r\n      height: 360px !important;\r\n    }\r\n  </style>"]}]}