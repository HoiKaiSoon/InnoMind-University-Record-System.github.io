{"remainingRequest":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\onlineuser\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\onlineuser\\index.vue","mtime":1705165492755},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxvZ2luTG9nSW5mbywgZGVsZXRlTG9naW5Mb2cgfSBmcm9tICdAL2FwaS9vbmxpbmV1c2VyJwppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUGFnaW5hdGlvbicgLy8g5YiG6aG1CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2xvZ2luTG9nJywKICBjb21wb25lbnRzOiB7IFBhZ2luYXRpb24gfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdDogW10sCiAgICAgIHRvdGFsOiAwLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgZnVsbExvYWRpbmc6IGZhbHNlLAogICAgICAvLyDli77pgInnmoRpZOmbhuWQiAogICAgICBpZHM6IFtdLAogICAgICAvLyDmmK/lkKbnpoHnlKjliKDpmaTmjInpkq4KICAgICAgZGVsZXRlQm50OiB0cnVlLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBwYWdlOiAxLAogICAgICAgIGxpbWl0OiAxMCwKICAgICAgICBzb3J0OiAnY3JlYXRlVGltZScsCiAgICAgICAgb3JkZXI6ICdkZXNjJywKICAgICAgICB1c2VyQ29kZTogdW5kZWZpbmVkLAogICAgICAgIGxvZ1R5cGU6IHVuZGVmaW5lZCwKICAgICAgICBjcmVhdGVUaW1lOiBbdGhpcy5wYXJzZVRpbWUobmV3IERhdGUoKSwgJ3t5fS17bX0te2R9JyksIHRoaXMucGFyc2VUaW1lKG5ldyBEYXRlKCksICd7eX0te219LXtkfScpXSwKICAgICAgICBzdGF0ZTogdW5kZWZpbmVkCiAgICAgIH0sCiAgICAgIHN0YXRlT3B0aW9uOiBbewogICAgICAgIHZhbHVlOiAnMScsCiAgICAgICAgbGFiZWw6ICfmiJDlip8nCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogJzAnLAogICAgICAgIGxhYmVsOiAn5aSx6LSlJwogICAgICB9XSwKICAgICAgbG9nVHlwZU9wdGlvbjogW3sKICAgICAgICB2YWx1ZTogJzEnLAogICAgICAgIGxhYmVsOiAn55m75b2VJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6ICcwJywKICAgICAgICBsYWJlbDogJ+eZu+WHuicKICAgICAgfV0sCiAgICAgIHBpY2tlck9wdGlvbnM6IHsKICAgICAgICBzaG9ydGN1dHM6IFt7CiAgICAgICAgICB0ZXh0OiAn5b2T5YmN5pe26Ze0JywKICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZSgpCiAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSkKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5ZGoJywKICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZSgpCiAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDcpCiAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSkKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5Liq5pyIJywKICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZSgpCiAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDMwKQogICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgdGV4dDogJ+acgOi/keS4ieS4quaciCcsCiAgICAgICAgICBvbkNsaWNrKHBpY2tlcikgewogICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpCiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKQogICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA5MCkKICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdCgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgY29uc3QgcXVlcnkgPSB0aGlzLmRlZXBDbG9uZSh0aGlzLmxpc3RRdWVyeSkKICAgICAgaWYgKHF1ZXJ5LmNyZWF0ZVRpbWUpIHsKICAgICAgICBxdWVyeS5jcmVhdGVUaW1lID0gcXVlcnkuY3JlYXRlVGltZS5qb2luKCcsJykKICAgICAgfQogICAgICBsb2dpbkxvZ0luZm8ocXVlcnkpCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5yZXN1bHQucmVjb3JkcwogICAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEucmVzdWx0LnRvdGFsCiAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgICB9KQogICAgfSwKICAgIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDEKICAgICAgdGhpcy5nZXRMaXN0KCkKICAgIH0sCiAgICBoYW5kbGVEZWxldGUoKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruWumuWIoOmZpOmAieS4reiusOW9leWQl++8nycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLmZ1bGxMb2FkaW5nID0gdHJ1ZQogICAgICAgIGRlbGV0ZUxvZ2luTG9nKHRoaXMuaWRzKQogICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICB0aGlzLmZ1bGxMb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgdGhpcy5ub3RpZnlNZXNzYWdlKCkKICAgICAgICAgICAgdGhpcy5oYW5kbGVGaWx0ZXIoKQogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZnVsbExvYWRpbmcgPSBmYWxzZQogICAgICAgICAgfSkKICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgIHRoaXMubm90aWZ5TWVzc2FnZSgnaW5mbycsICfliKDpmaTlj5bmtojvvIEnKQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5pZHMgPSB2YWwubWFwKHJvdyA9PiB7CiAgICAgICAgcmV0dXJuIHJvdy5sb2dpbkxvZ0lkCiAgICAgIH0pCiAgICAgIGlmICh0aGlzLmlkcyAmJiB0aGlzLmlkcy5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5kZWxldGVCbnQgPSBmYWxzZQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGVsZXRlQm50ID0gdHJ1ZQogICAgICB9CiAgICB9LAogICAgaGFuZGxlUm93Q2xpY2socm93LCBjb2x1bW4sIGV2ZW50KSB7CiAgICAgIHRoaXMuJHJlZnMudGFibGUudG9nZ2xlUm93U2VsZWN0aW9uKHJvdykKICAgIH0sCiAgICBoYW5kbGVEb3dubG9hZCgpIHsKICAgICAgdGhpcy5mdWxsTG9hZGluZyA9IHRydWUKICAgICAgaW1wb3J0KCdAL3V0aWxzL3ZlbmRvci9FeHBvcnQyRXhjZWwnKS50aGVuKGV4Y2VsID0+IHsKICAgICAgICAvLyDlpoLmnpzlvZPliY3mlbDmja7nmoTmgLvmlbDlpKfkuo7mr4/pobXmlbDvvIzliJnor7TmmI5saXN05Lit55qE5pWw5o2u5Li65YiG6aG15pWw5o2u77yM5omA5Lul6ZyA6KaB6YeN5paw6I635Y+W5omA5pyJ5pWw5o2uLOWQpuWImWxpc3TkuK3lrZjlgqjnmoTlsLHmmK/miYDmnInmlbDmja4KICAgICAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICBpZiAodGhpcy50b3RhbCA+IHRoaXMubGlzdFF1ZXJ5LmxpbWl0KSB7CiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy5kZWVwQ2xvbmUodGhpcy5saXN0UXVlcnkpCiAgICAgICAgICAgIGlmIChxdWVyeS5jcmVhdGVUaW1lKSB7CiAgICAgICAgICAgICAgcXVlcnkuY3JlYXRlVGltZSA9IHF1ZXJ5LmNyZWF0ZVRpbWUuam9pbignLCcpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcXVlcnkucGFnZSA9IDEKICAgICAgICAgICAgcXVlcnkubGltaXQgPSA5OTk5OQogICAgICAgICAgICBsb2dpbkxvZ0luZm8ocXVlcnkpCiAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZS5kYXRhLnJlc3VsdC5yZWNvcmRzKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZnVsbExvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICAgIH0pCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXNvbHZlKHRoaXMuZGVlcENsb25lKHRoaXMubGlzdCkpIC8vIGNvcHkgb2JqZWN0IGFycmF5CiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihsaXN0ID0+IHsKICAgICAgICAgIGNvbnN0IHRIZWFkZXIgPSBbJ+eUqOaIt+i0puWPtycsICfnmbvlvZXml7bpl7QnLCAn5pel5b+X57G75Z6LJywgJ+eZu+W9leeKtuaAgScsICfnmbvlvZVpcCcsICfnmbvlvZXlnLDlnYAnLCAn5rWP6KeI5Zmo57G75Z6LJywgJ+aTjeS9nOezu+e7nycsICfmj4/ov7AnXQogICAgICAgICAgY29uc3QgZmlsdGVyVmFsID0gWyd1c2VyQ29kZScsICdjcmVhdGVUaW1lJywgJ2xvZ1R5cGUnLCAnc3RhdGUnLCAnaXAnLCAnYWRkcmVzcycsICdicm93c2VyJywgJ29zJywgJ21zZyddCiAgICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5mb3JtYXRKc29uKGZpbHRlclZhbCwgbGlzdCkKICAgICAgICAgIGV4Y2VsLmV4cG9ydF9qc29uX3RvX2V4Y2VsKHsKICAgICAgICAgICAgaGVhZGVyOiB0SGVhZGVyLAogICAgICAgICAgICBkYXRhLAogICAgICAgICAgICBmaWxlbmFtZTogJ+eZu+W9leaXpeW/lycKICAgICAgICAgIH0pCiAgICAgICAgICB0aGlzLmZ1bGxMb2FkaW5nID0gZmFsc2UKICAgICAgICAgIHRoaXMubm90aWZ5TWVzc2FnZSgpCiAgICAgICAgfSkKICAgICAgfSkKICAgIH0sCiAgICBmb3JtYXRKc29uKGZpbHRlclZhbCwganNvbkRhdGEpIHsKICAgICAgcmV0dXJuIGpzb25EYXRhLm1hcChkYXRhID0+IGZpbHRlclZhbC5tYXAodmFsID0+IHsKICAgICAgICBpZiAodmFsID09PSAnbG9nVHlwZScpIHsKICAgICAgICAgIGRhdGFbdmFsXSA9IGRhdGFbdmFsXSA9PT0gJzEnID8gJ+eZu+W9lScgOiAn55m75Ye6JwogICAgICAgIH0gZWxzZSBpZiAodmFsID09PSAnc3RhdGUnKSB7CiAgICAgICAgICBkYXRhW3ZhbF0gPSBkYXRhW3ZhbF0gPT09ICcxJyA/ICfmiJDlip8nIDogJ+Wksei0pScKICAgICAgICB9IGVsc2UgaWYgKHZhbCA9PT0gJ2NyZWF0ZVRpbWUnKSB7CiAgICAgICAgICBkYXRhW3ZhbF0gPSB0aGlzLnBhcnNlVGltZShkYXRhW3ZhbF0sICd7eX0te219LXtkfSB7aH06e2l9JykKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGRhdGFbdmFsXQogICAgICB9KSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"index.vue","sourceRoot":"src/views/onlineuser","sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n      <el-form :model=\"listQuery\" ref=\"filterForm\" :inline=\"true\">\r\n        <el-form-item label=\"用户账号\" prop=\"userCode\">\r\n          <el-input v-model=\"listQuery.userCode\" placeholder=\"请输入用户账号\" clearable @keyup.enter.native=\"handleFilter\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"日志类型\" prop=\"logType\">\r\n          <el-select v-model=\"listQuery.logType\" clearable filterable placeholder=\"请选择日志类型\">\r\n            <el-option\r\n              v-for=\"item in logTypeOption\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"state\">\r\n          <el-select v-model=\"listQuery.state\" clearable filterable placeholder=\"请选择登录状态\">\r\n            <el-option\r\n              v-for=\"item in stateOption\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"登录时间\" prop=\"createTime\">\r\n          <el-date-picker\r\n            v-model=\"listQuery.createTime\"\r\n            type=\"daterange\"\r\n            align=\"right\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            :picker-options=\"pickerOptions\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-waves v-permission=\"'loginLog_query'\"  type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\" >\r\n            搜索\r\n          </el-button>\r\n          <el-button v-waves v-permission=\"'loginLog_query'\"  type=\"success\" icon=\"el-icon-refresh\" @click=\"resetForm('filterForm', listQuery, getList)\">\r\n            重置\r\n          </el-button>\r\n          <el-button v-waves v-permission=\"'loginLog_delete'\"  type=\"danger\" icon=\"el-icon-delete\" :disabled=\"deleteBnt\" @click=\"handleDelete\" v-loading.fullscreen.lock=\"fullLoading\">\r\n            删除\r\n          </el-button>\r\n          <el-button  v-waves v-permission=\"'operationLog_export'\" type=\"warning\" icon=\"el-icon-download\" @click=\"handleDownload\">\r\n            导出\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table\r\n        ref=\"table\"\r\n        v-loading=\"listLoading\"\r\n        :data=\"list\"\r\n        fit\r\n        highlight-current-row\r\n        border\r\n        stripe\r\n        row-key=\"loginLogId\"\r\n        @sort-change=\"sortChange($event, listQuery, handleFilter, {sort: 'createTime', order: 'desc'})\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        @row-click=\"handleRowClick\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"50px\" />\r\n        <el-table-column label=\"用户账号\" prop=\"userCode\" align=\"left\" width=\"110px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"登录时间\" prop=\"createTime\" align=\"center\" width=\"150px\" sortable=\"custom\">\r\n          <template slot-scope=\"{row}\">\r\n            <span>{{ row.createTime | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"日志类型\" prop=\"logType\" align=\"center\" width=\"110px\" sortable=\"custom\">\r\n          <template slot-scope=\"{row}\">\r\n              <span v-if=\"row.logType=='0'\">\r\n                <el-tag type=\"warning\">登出</el-tag>\r\n              </span>\r\n              <span v-if=\"row.logType=='1'\">\r\n                <el-tag>登录</el-tag>\r\n              </span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"登录状态\" prop=\"state\" align=\"center\" width=\"110px\" sortable=\"custom\">\r\n          <template slot-scope=\"{row}\">\r\n            <span v-if=\"row.state=='0'\">\r\n                <el-tag type=\"danger\">失败</el-tag>\r\n              </span>\r\n              <span v-if=\"row.state=='1'\">\r\n                <el-tag type=\"success\">成功</el-tag>\r\n              </span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"登录ip\" prop=\"ip\" align=\"center\" width=\"120px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"登录地址\" prop=\"address\" align=\"left\" width=\"150px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"浏览器类型\" prop=\"browser\" align=\"left\" width=\"120px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"操作系统\" prop=\"os\" align=\"left\" width=\"150px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"描述\" prop=\"msg\" align=\"left\" min-width=\"180px\" sortable=\"custom\"/>\r\n      </el-table>\r\n  \r\n      <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { loginLogInfo, deleteLoginLog } from '@/api/onlineuser'\r\n  import Pagination from '@/components/Pagination' // 分页\r\n  \r\n  export default {\r\n    name: 'loginLog',\r\n    components: { Pagination },\r\n    data() {\r\n      return {\r\n        list: [],\r\n        total: 0,\r\n        listLoading: true,\r\n        fullLoading: false,\r\n        // 勾选的id集合\r\n        ids: [],\r\n        // 是否禁用删除按钮\r\n        deleteBnt: true,\r\n        listQuery: {\r\n          page: 1,\r\n          limit: 10,\r\n          sort: 'createTime',\r\n          order: 'desc',\r\n          userCode: undefined,\r\n          logType: undefined,\r\n          createTime: [this.parseTime(new Date(), '{y}-{m}-{d}'), this.parseTime(new Date(), '{y}-{m}-{d}')],\r\n          state: undefined\r\n        },\r\n        stateOption: [{\r\n          value: '1',\r\n          label: '成功'\r\n        }, {\r\n          value: '0',\r\n          label: '失败'\r\n        }],\r\n        logTypeOption: [{\r\n          value: '1',\r\n          label: '登录'\r\n        }, {\r\n          value: '0',\r\n          label: '登出'\r\n        }],\r\n        pickerOptions: {\r\n          shortcuts: [{\r\n            text: '当前时间',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }, {\r\n            text: '最近一周',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }, {\r\n            text: '最近一个月',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }, {\r\n            text: '最近三个月',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.getList()\r\n    },\r\n    methods: {\r\n      getList() {\r\n        this.listLoading = true\r\n        const query = this.deepClone(this.listQuery)\r\n        if (query.createTime) {\r\n          query.createTime = query.createTime.join(',')\r\n        }\r\n        loginLogInfo(query)\r\n          .then(response => {\r\n            this.list = response.data.result.records\r\n            this.total = response.data.result.total\r\n            this.listLoading = false\r\n          })\r\n          .catch(() => {\r\n            this.listLoading = false\r\n          })\r\n      },\r\n      handleFilter() {\r\n        this.listQuery.page = 1\r\n        this.getList()\r\n      },\r\n      handleDelete() {\r\n        this.$confirm('确定删除选中记录吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.fullLoading = true\r\n          deleteLoginLog(this.ids)\r\n            .then(() => {\r\n              this.fullLoading = false\r\n              this.notifyMessage()\r\n              this.handleFilter()\r\n            })\r\n            .catch(() => {\r\n              this.fullLoading = false\r\n            })\r\n        }).catch(() => {\r\n          this.notifyMessage('info', '删除取消！')\r\n        })\r\n      },\r\n      handleSelectionChange(val) {\r\n        this.ids = val.map(row => {\r\n          return row.loginLogId\r\n        })\r\n        if (this.ids && this.ids.length > 0) {\r\n          this.deleteBnt = false\r\n        } else {\r\n          this.deleteBnt = true\r\n        }\r\n      },\r\n      handleRowClick(row, column, event) {\r\n        this.$refs.table.toggleRowSelection(row)\r\n      },\r\n      handleDownload() {\r\n        this.fullLoading = true\r\n        import('@/utils/vendor/Export2Excel').then(excel => {\r\n          // 如果当前数据的总数大于每页数，则说明list中的数据为分页数据，所以需要重新获取所有数据,否则list中存储的就是所有数据\r\n          new Promise((resolve, reject) => {\r\n            if (this.total > this.listQuery.limit) {\r\n              const query = this.deepClone(this.listQuery)\r\n              if (query.createTime) {\r\n                query.createTime = query.createTime.join(',')\r\n              }\r\n              query.page = 1\r\n              query.limit = 99999\r\n              loginLogInfo(query)\r\n                .then(response => {\r\n                  resolve(response.data.result.records)\r\n                })\r\n                .catch(() => {\r\n                  this.fullLoading = false\r\n                })\r\n            } else {\r\n              resolve(this.deepClone(this.list)) // copy object array\r\n            }\r\n          }).then(list => {\r\n            const tHeader = ['用户账号', '登录时间', '日志类型', '登录状态', '登录ip', '登录地址', '浏览器类型', '操作系统', '描述']\r\n            const filterVal = ['userCode', 'createTime', 'logType', 'state', 'ip', 'address', 'browser', 'os', 'msg']\r\n            const data = this.formatJson(filterVal, list)\r\n            excel.export_json_to_excel({\r\n              header: tHeader,\r\n              data,\r\n              filename: '登录日志'\r\n            })\r\n            this.fullLoading = false\r\n            this.notifyMessage()\r\n          })\r\n        })\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(data => filterVal.map(val => {\r\n          if (val === 'logType') {\r\n            data[val] = data[val] === '1' ? '登录' : '登出'\r\n          } else if (val === 'state') {\r\n            data[val] = data[val] === '1' ? '成功' : '失败'\r\n          } else if (val === 'createTime') {\r\n            data[val] = this.parseTime(data[val], '{y}-{m}-{d} {h}:{i}')\r\n          }\r\n          return data[val]\r\n        }))\r\n      }\r\n    }\r\n  }\r\n  </script>"]}]}