{"remainingRequest":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\dashboard\\index.vue?vue&type=template&id=106c86ed&scoped=true&","dependencies":[{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\dashboard\\index.vue","mtime":1705066736523},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655712169000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}