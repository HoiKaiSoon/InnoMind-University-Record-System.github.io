{"remainingRequest":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\onlineuser\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\src\\views\\onlineuser\\index.vue","mtime":1705165492755},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\babel.config.js","mtime":1637306514000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test frontend system\\vue-admin-template-master\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA,iD,CAAA;;AAEA;EACAA,gBADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC,IAHA,kBAGA;IACA;MACAC,QADA;MAEAC,QAFA;MAGAC,iBAHA;MAIAC,kBAJA;MAKA;MACAC,OANA;MAOA;MACAC,eARA;MASAC;QACAC,OADA;QAEAC,SAFA;QAGAC,kBAHA;QAIAC,aAJA;QAKAC,mBALA;QAMAC,kBANA;QAOAC,kGAPA;QAQAC;MARA,CATA;MAmBAC;QACAC,UADA;QAEAC;MAFA,GAGA;QACAD,UADA;QAEAC;MAFA,CAHA,CAnBA;MA0BAC;QACAF,UADA;QAEAC;MAFA,GAGA;QACAD,UADA;QAEAC;MAFA,CAHA,CA1BA;MAiCAE;QACAC;UACAC,YADA;UAEAC,OAFA,mBAEAC,MAFA,EAEA;YACA;YACA;YACAA;UACA;QANA,GAOA;UACAF,YADA;UAEAC,OAFA,mBAEAC,MAFA,EAEA;YACA;YACA;YACAC;YACAD;UACA;QAPA,CAPA,EAeA;UACAF,aADA;UAEAC,OAFA,mBAEAC,MAFA,EAEA;YACA;YACA;YACAC;YACAD;UACA;QAPA,CAfA,EAuBA;UACAF,aADA;UAEAC,OAFA,mBAEAC,MAFA,EAEA;YACA;YACA;YACAC;YACAD;UACA;QAPA,CAvBA;MADA;IAjCA;EAoEA,CAxEA;EAyEAE,OAzEA,qBAyEA;IACA;EACA,CA3EA;EA4EAC;IACAC,OADA,qBACA;MAAA;;MACA;MACA;;MACA;QACAC;MACA;;MACAC,oBACAC,IADA,CACA;QACA;QACA;QACA;MACA,CALA,EAMAC,KANA,CAMA;QACA;MACA,CARA;IASA,CAhBA;IAiBAC,YAjBA,0BAiBA;MACA;MACA;IACA,CApBA;IAqBAC,YArBA,0BAqBA;MAAA;;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAIAN,IAJA,CAIA;QACA;QACAO,2BACAP,IADA,CACA;UACA;;UACA;;UACA;QACA,CALA,EAMAC,KANA,CAMA;UACA;QACA,CARA;MASA,CAfA,EAeAA,KAfA,CAeA;QACA;MACA,CAjBA;IAkBA,CAxCA;IAyCAO,qBAzCA,iCAyCAC,GAzCA,EAyCA;MACA;QACA;MACA,CAFA;;MAGA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CAlDA;IAmDAC,cAnDA,0BAmDAC,GAnDA,EAmDAC,MAnDA,EAmDAC,KAnDA,EAmDA;MACA;IACA,CArDA;IAsDAC,cAtDA,4BAsDA;MAAA;;MACA;MACA;QAAA;MAAA;QACA;QACA;UACA;YACA;;YACA;cACAhB;YACA;;YACAA;YACAA;YACAC,oBACAC,IADA,CACA;cACAe;YACA,CAHA,EAIAd,KAJA,CAIA;cACA;YACA,CANA;UAOA,CAdA,MAcA;YACAc,uCADA,CACA;UACA;QACA,CAlBA,EAkBAf,IAlBA,CAkBA;UACA;UACA;;UACA;;UACAgB;YACAC,eADA;YAEAhD,UAFA;YAGAiD;UAHA;UAKA;;UACA;QACA,CA7BA;MA8BA,CAhCA;IAiCA,CAzFA;IA0FAC,UA1FA,sBA0FAC,SA1FA,EA0FAC,QA1FA,EA0FA;MAAA;;MACA;QAAA;UACA;YACApD;UACA,CAFA,MAEA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;;UACA;QACA,CATA;MAAA;IAUA;EArGA;AA5EA","names":["name","components","Pagination","data","list","total","listLoading","fullLoading","ids","deleteBnt","listQuery","page","limit","sort","order","userCode","logType","createTime","state","stateOption","value","label","logTypeOption","pickerOptions","shortcuts","text","onClick","picker","start","created","methods","getList","query","loginLogInfo","then","catch","handleFilter","handleDelete","confirmButtonText","cancelButtonText","type","deleteLoginLog","handleSelectionChange","val","handleRowClick","row","column","event","handleDownload","resolve","excel","header","filename","formatJson","filterVal","jsonData"],"sourceRoot":"src/views/onlineuser","sources":["index.vue"],"sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n      <el-form :model=\"listQuery\" ref=\"filterForm\" :inline=\"true\">\r\n        <el-form-item label=\"用户账号\" prop=\"userCode\">\r\n          <el-input v-model=\"listQuery.userCode\" placeholder=\"请输入用户账号\" clearable @keyup.enter.native=\"handleFilter\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"日志类型\" prop=\"logType\">\r\n          <el-select v-model=\"listQuery.logType\" clearable filterable placeholder=\"请选择日志类型\">\r\n            <el-option\r\n              v-for=\"item in logTypeOption\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"state\">\r\n          <el-select v-model=\"listQuery.state\" clearable filterable placeholder=\"请选择登录状态\">\r\n            <el-option\r\n              v-for=\"item in stateOption\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"登录时间\" prop=\"createTime\">\r\n          <el-date-picker\r\n            v-model=\"listQuery.createTime\"\r\n            type=\"daterange\"\r\n            align=\"right\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            :picker-options=\"pickerOptions\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-waves v-permission=\"'loginLog_query'\"  type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\" >\r\n            搜索\r\n          </el-button>\r\n          <el-button v-waves v-permission=\"'loginLog_query'\"  type=\"success\" icon=\"el-icon-refresh\" @click=\"resetForm('filterForm', listQuery, getList)\">\r\n            重置\r\n          </el-button>\r\n          <el-button v-waves v-permission=\"'loginLog_delete'\"  type=\"danger\" icon=\"el-icon-delete\" :disabled=\"deleteBnt\" @click=\"handleDelete\" v-loading.fullscreen.lock=\"fullLoading\">\r\n            删除\r\n          </el-button>\r\n          <el-button  v-waves v-permission=\"'operationLog_export'\" type=\"warning\" icon=\"el-icon-download\" @click=\"handleDownload\">\r\n            导出\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table\r\n        ref=\"table\"\r\n        v-loading=\"listLoading\"\r\n        :data=\"list\"\r\n        fit\r\n        highlight-current-row\r\n        border\r\n        stripe\r\n        row-key=\"loginLogId\"\r\n        @sort-change=\"sortChange($event, listQuery, handleFilter, {sort: 'createTime', order: 'desc'})\"\r\n        @selection-change=\"handleSelectionChange\"\r\n        @row-click=\"handleRowClick\"\r\n      >\r\n        <el-table-column type=\"selection\" width=\"50px\" />\r\n        <el-table-column label=\"用户账号\" prop=\"userCode\" align=\"left\" width=\"110px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"登录时间\" prop=\"createTime\" align=\"center\" width=\"150px\" sortable=\"custom\">\r\n          <template slot-scope=\"{row}\">\r\n            <span>{{ row.createTime | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"日志类型\" prop=\"logType\" align=\"center\" width=\"110px\" sortable=\"custom\">\r\n          <template slot-scope=\"{row}\">\r\n              <span v-if=\"row.logType=='0'\">\r\n                <el-tag type=\"warning\">登出</el-tag>\r\n              </span>\r\n              <span v-if=\"row.logType=='1'\">\r\n                <el-tag>登录</el-tag>\r\n              </span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"登录状态\" prop=\"state\" align=\"center\" width=\"110px\" sortable=\"custom\">\r\n          <template slot-scope=\"{row}\">\r\n            <span v-if=\"row.state=='0'\">\r\n                <el-tag type=\"danger\">失败</el-tag>\r\n              </span>\r\n              <span v-if=\"row.state=='1'\">\r\n                <el-tag type=\"success\">成功</el-tag>\r\n              </span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"登录ip\" prop=\"ip\" align=\"center\" width=\"120px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"登录地址\" prop=\"address\" align=\"left\" width=\"150px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"浏览器类型\" prop=\"browser\" align=\"left\" width=\"120px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"操作系统\" prop=\"os\" align=\"left\" width=\"150px\" sortable=\"custom\"/>\r\n        <el-table-column label=\"描述\" prop=\"msg\" align=\"left\" min-width=\"180px\" sortable=\"custom\"/>\r\n      </el-table>\r\n  \r\n      <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { loginLogInfo, deleteLoginLog } from '@/api/onlineuser'\r\n  import Pagination from '@/components/Pagination' // 分页\r\n  \r\n  export default {\r\n    name: 'loginLog',\r\n    components: { Pagination },\r\n    data() {\r\n      return {\r\n        list: [],\r\n        total: 0,\r\n        listLoading: true,\r\n        fullLoading: false,\r\n        // 勾选的id集合\r\n        ids: [],\r\n        // 是否禁用删除按钮\r\n        deleteBnt: true,\r\n        listQuery: {\r\n          page: 1,\r\n          limit: 10,\r\n          sort: 'createTime',\r\n          order: 'desc',\r\n          userCode: undefined,\r\n          logType: undefined,\r\n          createTime: [this.parseTime(new Date(), '{y}-{m}-{d}'), this.parseTime(new Date(), '{y}-{m}-{d}')],\r\n          state: undefined\r\n        },\r\n        stateOption: [{\r\n          value: '1',\r\n          label: '成功'\r\n        }, {\r\n          value: '0',\r\n          label: '失败'\r\n        }],\r\n        logTypeOption: [{\r\n          value: '1',\r\n          label: '登录'\r\n        }, {\r\n          value: '0',\r\n          label: '登出'\r\n        }],\r\n        pickerOptions: {\r\n          shortcuts: [{\r\n            text: '当前时间',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }, {\r\n            text: '最近一周',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }, {\r\n            text: '最近一个月',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }, {\r\n            text: '最近三个月',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n              picker.$emit('pick', [start, end])\r\n            }\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.getList()\r\n    },\r\n    methods: {\r\n      getList() {\r\n        this.listLoading = true\r\n        const query = this.deepClone(this.listQuery)\r\n        if (query.createTime) {\r\n          query.createTime = query.createTime.join(',')\r\n        }\r\n        loginLogInfo(query)\r\n          .then(response => {\r\n            this.list = response.data.result.records\r\n            this.total = response.data.result.total\r\n            this.listLoading = false\r\n          })\r\n          .catch(() => {\r\n            this.listLoading = false\r\n          })\r\n      },\r\n      handleFilter() {\r\n        this.listQuery.page = 1\r\n        this.getList()\r\n      },\r\n      handleDelete() {\r\n        this.$confirm('确定删除选中记录吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.fullLoading = true\r\n          deleteLoginLog(this.ids)\r\n            .then(() => {\r\n              this.fullLoading = false\r\n              this.notifyMessage()\r\n              this.handleFilter()\r\n            })\r\n            .catch(() => {\r\n              this.fullLoading = false\r\n            })\r\n        }).catch(() => {\r\n          this.notifyMessage('info', '删除取消！')\r\n        })\r\n      },\r\n      handleSelectionChange(val) {\r\n        this.ids = val.map(row => {\r\n          return row.loginLogId\r\n        })\r\n        if (this.ids && this.ids.length > 0) {\r\n          this.deleteBnt = false\r\n        } else {\r\n          this.deleteBnt = true\r\n        }\r\n      },\r\n      handleRowClick(row, column, event) {\r\n        this.$refs.table.toggleRowSelection(row)\r\n      },\r\n      handleDownload() {\r\n        this.fullLoading = true\r\n        import('@/utils/vendor/Export2Excel').then(excel => {\r\n          // 如果当前数据的总数大于每页数，则说明list中的数据为分页数据，所以需要重新获取所有数据,否则list中存储的就是所有数据\r\n          new Promise((resolve, reject) => {\r\n            if (this.total > this.listQuery.limit) {\r\n              const query = this.deepClone(this.listQuery)\r\n              if (query.createTime) {\r\n                query.createTime = query.createTime.join(',')\r\n              }\r\n              query.page = 1\r\n              query.limit = 99999\r\n              loginLogInfo(query)\r\n                .then(response => {\r\n                  resolve(response.data.result.records)\r\n                })\r\n                .catch(() => {\r\n                  this.fullLoading = false\r\n                })\r\n            } else {\r\n              resolve(this.deepClone(this.list)) // copy object array\r\n            }\r\n          }).then(list => {\r\n            const tHeader = ['用户账号', '登录时间', '日志类型', '登录状态', '登录ip', '登录地址', '浏览器类型', '操作系统', '描述']\r\n            const filterVal = ['userCode', 'createTime', 'logType', 'state', 'ip', 'address', 'browser', 'os', 'msg']\r\n            const data = this.formatJson(filterVal, list)\r\n            excel.export_json_to_excel({\r\n              header: tHeader,\r\n              data,\r\n              filename: '登录日志'\r\n            })\r\n            this.fullLoading = false\r\n            this.notifyMessage()\r\n          })\r\n        })\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(data => filterVal.map(val => {\r\n          if (val === 'logType') {\r\n            data[val] = data[val] === '1' ? '登录' : '登出'\r\n          } else if (val === 'state') {\r\n            data[val] = data[val] === '1' ? '成功' : '失败'\r\n          } else if (val === 'createTime') {\r\n            data[val] = this.parseTime(data[val], '{y}-{m}-{d} {h}:{i}')\r\n          }\r\n          return data[val]\r\n        }))\r\n      }\r\n    }\r\n  }\r\n  </script>"]}]}